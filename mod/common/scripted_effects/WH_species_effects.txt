# Given a species, and change the CLASS
# Optional PORTRAIT: TODO not working yet, needs right portrait identification
# Apply to all pops, leaders and armies that have the original species and the same owner as the scope object.
# Scope: changing_species (or something that has a species and an owner)
mirror_species = {
	save_event_target_as = changing_species
	# TODO not working yet, needs right portrait identification
	# [[PORTRAIT]
	# 	if = {
	# 		limit = {
	# 			any_galaxy_species = {
	# 				species_portrait = $PORTRAIT$
	# 				NOT = { is_same_species = prev }
	# 				is_species_class = $CLASS$
	# 			}
	# 		}
	# 		random_galaxy_species = {
	# 			limit = {
	# 				species_portrait = $PORTRAIT$
	# 				NOT = { is_same_species = prev }
	# 				is_species_class = $CLASS$
	# 			}
	# 			save_event_target_as = mirror_species
	# 			save_event_target_as = merge_species
	# 		}
	# 	}
	# ]
	if = {
		limit = {
			NOR = {
				exists = event_target:mirror_species
				exists = event_target:merge_species
			}
		}
		create_species = {
			# is_mod = yes
			name = this
			plural = this
			class = $CLASS$
			portrait = this
			traits = this
			can_be_modified = this
			homeworld = this
			namelist = this
			gender = this
			traits = {
				ideal_planet_class = this
			}
			effect = { save_event_target_as = mirror_species }
		}
	}

	every_species_pop = {
		if = {
			limit = { exists = owner }
			change_species =  event_target:mirror_species
		}
		else = { kill_pop = yes }
	}
	random_species_pop = {
		limit = { exists = owner }
		owner = {
			every_owned_pop = {
				limit = { is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
			every_owned_leader = {
				limit = { is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
			every_pool_leader = {
				limit = { is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
			every_envoy = {
				limit = { is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
			every_owned_army = {
				limit = { exists = species is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
			every_controlled_ship = {
				limit = { is_ship_class = shipclass_colonizer is_exact_same_species = event_target:changing_species }
				change_species =  event_target:mirror_species
			}
		}
	}
	# event_target:changing_species = { set_species_identity = event_target:mirror_species }
	# if = {
	# 	limit = {
	# 		exists = event_target:merge_species
	# 		any_galaxy_species = {
	# 			species_portrait = prev
	# 			NOT = { is_same_species = prev }
	# 			is_species_class = $CLASS$
	# 		}
	# 	}
	# 	random_galaxy_species = {
	# 		limit = {
	# 			species_portrait = prev
	# 			NOT = { is_same_species = prev }
	# 			is_species_class = $CLASS$
	# 		}
	# 		event_target:merge_species = { set_species_identity = event_target:mirror_species }
	# 	}
	# }
}
