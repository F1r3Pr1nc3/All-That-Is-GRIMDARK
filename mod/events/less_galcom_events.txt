# Idea taken from Vengineer, overhauled by FirePrince
namespace = lessgalcom
# on_bi_yearly_pulse
event = {
	id = lessgalcom.1
	hide_window = yes
	is_triggered_only = yes
	trigger = { is_galactic_community_formed = yes }
	immediate = {
		every_playable_country = {
			limit = {
				is_ai = yes
				NOR = {
					has_country_flag = the_mankind
					has_country_flag = mankind_star_empire
					has_country_flag = human_empire
					MECR_trigger_1_can_be_part_of_galactic_community = yes
				}
			}
			if = {
				limit = { has_crisis = yes }
				set_variable = { which = galcom_opinion value = 31 }
			}
			else = {
				set_variable = { which = galcom_opinion value = 1 }
			}
			switch = { trigger = has_ethic
				ethic_xenophile			= { change_variable = { which = galcom_opinion value = 15 } }
				ethic_fanatic_xenophile = { change_variable = { which = galcom_opinion value = 30 } }
				ethic_xenophobe			= { change_variable = { which = galcom_opinion value = -15 } }
				ethic_fanatic_xenophobe	= { change_variable = { which = galcom_opinion value = -30 } }
			}
			# Galcom Related
			if = {
				limit = { is_galactic_community_member = yes }
				if = {
					limit = { has_galactic_emperor = yes }
					change_variable = { which = galcom_opinion value = 99999 }
				}
				else = {
					change_variable = { which = galcom_opinion value = 40 }
					if = {
						limit = { is_part_of_galactic_council = yes }
						change_variable = { which = galcom_opinion value = 60 }
						if = {
							limit = { is_galactic_custodian = yes }
							change_variable = { which = galcom_opinion value = 999 }
						}
					}
				}
			}
			else = {
				if = {
					limit = { has_galactic_emperor = yes }
					subtract_variable = { which = galcom_opinion value = 100 }
				}
				else = {
					subtract_variable = { which = galcom_opinion value = 30 }
				}
			}
			# Federation Related
			if = {
				limit = { has_federation = yes }
				if = {
					limit = { any_federation_ally = { is_galactic_community_member = yes } }
					change_variable = { which = galcom_opinion value = 10 }
					if = {
						limit = { any_federation_ally = { is_part_of_galactic_council = yes } }
						change_variable = { which = galcom_opinion value = 20 }
					}
				}
				if = {
					limit = { any_federation_ally = { is_galactic_community_member = no } }
					subtract_variable = { which = galcom_opinion value = 5 }
				}
			}
			# Subject Related
			if = {
				limit = {
					is_subject = yes
					any_agreement = {
						OR = {
							has_term_value = { term = subject_diplomacy value = subject_can_not_do_diplomacy }
							has_term_value = { term = subject_diplomacy value = subject_can_do_diplomacy_but_not_vote }
						}
					}
				}
				if = {
					limit = { overlord = { is_galactic_community_member = yes } }
					change_variable = { which = galcom_opinion value = 99999 }
				}
				else = {
					subtract_variable = { which = galcom_opinion value = 99999 }
				}
			}
			# Rival Related
			if = {
				limit = { count_rival_country = { count > 0 } }
				if = {
					limit = {
						any_rival_country = { is_part_of_galactic_council = yes }
						is_part_of_galactic_council = no
					}
					subtract_variable = { which = galcom_opinion value = 70 }
				}
				if = {
					limit = { any_rival_country = { is_galactic_custodian = yes } }
					subtract_variable = { which = galcom_opinion value = 999 }
				}
				every_rival_country = {
					if = {
						limit = { is_galactic_community_member = yes }
						prev = {
							subtract_variable = { which = galcom_opinion value = 5 }
						}
					}
					else = {
						prev = {
							change_variable = { which = galcom_opinion value = 5 }
						}
					}
				}
			}
			# Evaluating
			if = {
				limit = { check_variable = { which = galcom_opinion value < 0 } }
				set_country_flag = expelled_from_community
				if = {
					limit = { is_galactic_community_member = yes }
					if = {
						limit = { is_galactic_council_established = yes is_part_of_galactic_council = yes }
						remove_from_galactic_council = yes
					}
					remove_from_galactic_community = yes
				}
			}
			else_if = {
				limit = { has_country_flag = expelled_from_community }
				remove_country_flag = expelled_from_community
			}
			clear_variable = galcom_opinion
		}
	}
}

# Human Big alliance on_decade_pulse - compare aagrimstarts.2010
event = {
	id = lessgalcom.2
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		years_passed > 31
		any_playable_country = { has_origin = origin_godruler }
	}
	immediate = {
		random_playable_country = {
			limit = { has_origin = origin_godruler }
			save_event_target_as = godruler
		}
		every_playable_country = {
			limit = {
				NOR = { has_origin = origin_godruler has_origin = origin_hegemon }
				OR = {
					has_country_flag = human_empire
					has_country_flag = loyallegion
					has_country_flag = the_mankind
					has_country_flag = mankind_star_empire
				}
				NAND = { is_at_war = yes is_at_war_with = event_target:godruler }
				NAND = {
					has_federation = yes
					event_target:godruler = { has_federation = yes }
					any_federation_ally = { is_same_empire = event_target:godruler }
				}
			}
			if = {
				limit = { has_federation = yes }
				leave_alliance = { override_requirements = yes }
			}
			event_target:godruler = {
				if = {
					limit = { has_federation = yes }
					every_federation_ally = {
						limit = { has_closed_borders = prevprev }
						establish_communications_no_message = prevprev
						add_intel = { amount = 40 who = prevprev }
						set_closed_borders = { who = prevprev status = no }
					}
				}
				prev = {
					add_intel = { amount = 40 who = prev }
					set_closed_borders = { who = prev status = no }
					join_alliance = { who = prev override_requirements = yes }
				}
			}
		}
		event_target:godruler = {
			if = {
				limit = { is_federation_leader = no }
				federation = { set_federation_leader = prev }
			}
			if = {
				limit = { can_set_ai_policy = yes NOT = { has_policy_flag = ai_outlawed } can_set_policy = { policy = artificial_intelligence_policy option = ai_outlawed } }
				set_policy = { policy = artificial_intelligence_policy option = ai_outlawed cooldown = yes }
			}
			else_if = {
				limit = { NOT = { has_policy_flag = robots_outlawed } can_set_policy = { policy = robot_pop_policy option = robot_pops_outlawed } }
				set_policy = { policy = robot_pop_policy option = robot_pops_outlawed cooldown = yes }
			}
		}
	}
}

# Chaos Undivided alliance on_decade_pulse
event = {
	id = lessgalcom.3
	hide_window = yes
	is_triggered_only = yes
	# fire_only_once = yes
	trigger = {
		OR = {
			has_global_flag = small_tear_active # Shroud Rising
			years_passed > 42
		}
		count_playable_country = {
			count > 1
			limit = { has_country_flag = chaos_empire }
		}
	}
	immediate = {
		if = { # Only if not fire_only_once
			limit = { NOT = { has_global_flag = small_tear_active } }
			if = {
				limit = { years_passed > 64 }
				random = { chance = 50	break = yes }
				if = {
					limit = { years_passed > 96 }
					random = { chance = 50	break = yes }
					if = {
						limit = { years_passed > 132 }
						random = { chance = 50	break = yes }
					}
				}
			}
		}

		# Find Chaos Undivided leader
		random_playable_country = { # Black Legion
			limit = { OR = { has_origin = origin_fallen_psionic has_country_flag = chaos_undivided_worship has_country_flag = the_black_legion } }
			save_event_target_as = chaos_undivided
		}
		if = { # Kh√¢rn the Betrayer (World Eaters - Khorne)
			limit = { NOT = { exists = event_target:chaos_undivided } }
			random_playable_country = {
				limit = { has_country_flag = the_world_eater }
				save_event_target_as = chaos_undivided
			}
			if = { # Magnus the Red (Thousand Sons - Tzeentch)
				limit = { NOT = { exists = event_target:chaos_undivided } }
				random_playable_country = {
					limit = { has_country_flag = the_thousand_sons }
					save_event_target_as = chaos_undivided
				}
				if = { # Fulgrim (Emperor's Children - Slaanesh)
					limit = { NOT = { exists = event_target:chaos_undivided } }
					random_playable_country = {
						limit = { has_country_flag = the_emperor_children }
						save_event_target_as = chaos_undivided
					}
					if = { # Mortarion (Death Guard - Nurgle)
						limit = { NOT = { exists = event_target:chaos_undivided } }
						random_playable_country = {
							limit = { has_country_flag = the_death_guard }
							save_event_target_as = chaos_undivided
						}
						if = { # Lorgar (Word Bearers - Chaos Pantheon)
							limit = { NOT = { exists = event_target:chaos_undivided } }
							random_playable_country = {
								limit = { has_country_flag = chaos_empire has_country_flag = the_word_bearer }
								save_event_target_as = chaos_undivided
							}
							if = { # Sevatar (Night Lords - Undivided Renegades)
								limit = { NOT = { exists = event_target:chaos_undivided } }
								random_playable_country = {
									limit = { has_country_flag = chaos_empire has_country_flag = the_night_lords }
									save_event_target_as = chaos_undivided
								}
							}
						}
					}
				}
			}
		}
		if = {
			limit = { NOT = { exists = event_target:chaos_undivided } }
			random_playable_country = {
				limit = { has_country_flag = chaos_empire }
				save_event_target_as = chaos_undivided
			}
		}

		every_playable_country = {
			limit = {
				NOT = { is_same_empire = event_target:chaos_undivided }
				has_country_flag = chaos_empire
				NAND = { is_at_war = yes is_at_war_with = event_target:chaos_undivided }
				NAND = {
					has_federation = yes
					event_target:chaos_undivided = { has_federation = yes }
					any_federation_ally = { is_same_empire = event_target:chaos_undivided }
				}
			}
			if = {
				limit = { is_subject = yes }
				set_subject_of = { who = none }
			}
			if = {
				limit = { has_federation = yes }
				leave_alliance = { override_requirements = yes }
			}
			event_target:chaos_undivided = {
				if = {
					limit = { has_federation = yes }
					every_federation_ally = {
						limit = { has_closed_borders = prevprev }
						establish_communications_no_message = prevprev
						add_intel = { amount = 40 who = prevprev }
						set_closed_borders = { who = prevprev status = no }
					}
				}
				prev = {
					add_intel = { amount = 40 who = prev }
					set_closed_borders = { who = prev status = no }
					join_alliance = { who = prev override_requirements = yes }
				}
			}
		}
		event_target:chaos_undivided = {
			if = {
				limit = { is_federation_leader = no }
				federation = { set_federation_leader = prev }
			}
		}
	}
}

## Ork war - on_decade_pulse
event = {
	id = lessgalcom.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		years_passed > 42
		any_playable_country = {
			is_ai = yes
			OR = { has_origin = origin_barbarichorde has_country_flag = ork_empire }
			is_at_war = no
		}
	}
	immediate = {
		random_playable_country = {
			limit = {
				is_ai = yes
				OR = { has_origin = origin_barbarichorde has_country_flag = ork_empire }
				is_at_war = no
			}
			if = {
				limit = { used_naval_capacity_percent < 0.7 }
				create_fleet_from_naval_cap = 0.1
				if = {
					limit = { used_naval_capacity_percent < 0.5 }
					create_fleet_from_naval_cap = 0.2
					if = {
						limit = { used_naval_capacity_percent < 0.3 }
						create_fleet_from_naval_cap = 0.3
						if = {
							limit = { used_naval_capacity_percent < 0.1 }
							create_fleet_from_naval_cap = 0.4
						}
					}
				}
			}
			# Army Transports
			change_variable = { which = "titanic_life_soldier_count" value = -1 }
			create_fleet = {
				effect = {
					set_owner = prev
					while = { count = 10
						create_army_transport = { army_type = "assault_army" species = owner_species }
					}
					while = { count = 3
						create_army_transport = { army_type = "mecha_army" army_name = "NAME_mechawarrior_contractors" }
					}
					create_army_transport = { army_type = "titanic_assault_army" }
					set_location = { target = prev.capital_scope }
				}
			}

			# Attack
			random_neighbor_country = {
				limit = {
					merg_is_default_empire = yes
					OR = {
						is_hostile_to = prev
						opinion_level = { who = prev level <= neutral }
					}
				}
				weights = { base = 1
					modifier = { add = 10 relative_power = { who = prev category = fleet value <= inferior } }
					modifier = { add = 10 relative_power = { who = prev category = fleet value <= equivalent } }
					modifier = { add = 40 is_ai = yes }
				}
				if = {
					limit = { NOT = {  has_communications = prev } }
					establish_communications_no_message = prev
					establish_contact = { who = prev location = prev.capital_scope }
				}
				prev = {
					declare_war = {
						target = prev
						attacker_war_goal = wg_plunder
						name = "WAAAGH"
						# name = { TODO TEST
						# 	key = "WAAAGH!"
						# 	literal = yes
						# }
					}
					add_opinion_modifier = { modifier = opinion_first_contact_war who = prev }
				}
				if = { # Need an ally?
					limit = { is_ai = yes has_federation = yes }
					random_playable_country = {
						limit = {
							is_ai = yes
							NOR = {
								has_soulkeepers_origin = yes # has_country_flag = eldar_empire }
								has_country_flag = human_empire
								has_country_flag = tau_empire
								has_country_flag = necron_empire
								is_synthetic_empire = yes # Very last fallback ally?
							}
							is_at_war = no
							has_communications = prev
							OR = {
								is_hostile_to = prev
								opinion_level = { who = prev level <= neutral }
							}
							OR = { is_neighbor_of = prev is_neighbor_of = prevprev is_in_sensor_range = prevprev.capital_scope }
							relative_power = { who = prev category = fleet value <= equivalent }
						}
						if = {
							limit = { is_subject = yes }
							set_subject_of = { who = none }
						}
						if = {
							limit = { has_federation = yes any_federation_ally = { is_same_empire = prevprev } }
							leave_alliance = { override_requirements = yes }
						}
						establish_communications_no_message = prevprev
						establish_contact = { who = prevprev location = prevprev.capital_scope }
						prev = {
							random_war = {
								limit = { is_war_participant = { who = prev side = defenders } }
								prevprev = {
									join_war_on_side = { war = prev side = attackers }
								}
							}
						}
					}
				}
			}
		}
	}
}

## Tyranid war - on_decade_pulse
event = {
	id = lessgalcom.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		years_passed > 31
		any_playable_country = {
			is_ai = yes
			OR = { has_origin = origin_bioreformers has_country_flag = tyranid_empire }
			is_at_war = no
		}
	}
	immediate = {
		random_playable_country = {
			limit = {
				is_ai = yes
				OR = { has_origin = origin_bioreformers has_country_flag = tyranid_empire }
				is_at_war = no
			}
			if = {
				limit = { used_naval_capacity_percent < 0.8 }
				create_fleet_from_naval_cap = 0.1
				if = {
					limit = { used_naval_capacity_percent < 0.6 }
					create_fleet_from_naval_cap = 0.2
					if = {
						limit = { used_naval_capacity_percent < 0.4 }
						create_fleet_from_naval_cap = 0.3
						if = {
							limit = { used_naval_capacity_percent < 0.2 }
							create_fleet_from_naval_cap = 0.4
						}
					}
				}
			}
			# Army Transports
			save_event_target_as = prethoryn
			owner_main_species = { save_event_target_as = prethoryn_species }
			capital_scope = { owner = { swarm_armies = yes } } # Needs prevprev
			# Mutant Horror Armies
			create_fleet = {
				effect = {
					set_owner = prev
					while = { count = 3
						create_army_transport = { army_type = "mutant_army" species = owner_species }
					}
					set_location = { target = prev.capital_scope }
				}
			}

			# Attack
			random_neighbor_country = {
				limit = {
					merg_is_default_empire = yes
					OR = {
						is_hostile_to = prev
						opinion_level = { who = prev level <= neutral }
					}
				}
				weights = { base = 1
					modifier = { add = 10 relative_power = { who = prev category = fleet value <= inferior } }
					modifier = { add = 10 relative_power = { who = prev category = fleet value <= equivalent } }
					modifier = { add = 40 is_ai = yes }
				}
				if = {
					limit = { NOT = {  has_communications = prev } }
					establish_communications_no_message = prev
					establish_contact = { who = prev location = prev.capital_scope }
				}
				prev = {
					declare_war = { target = prev attacker_war_goal = wg_absorption name = "situation.2048.name" }
					add_opinion_modifier = { modifier = opinion_first_contact_war who = prev }
				}
				if = { # Need an ally?
					limit = { is_ai = yes has_federation = yes }
					random_playable_country = {
						limit = {
							is_ai = yes
							OR = { has_origin = origin_bioreformers has_country_flag = tyranid_empire }
							# is_at_war = no
							# has_communications = prev
							# OR = {
							# 	is_hostile_to = prev
							# 	opinion_level = { who = prev level <= neutral }
							# }
							OR = { is_neighbor_of = prev is_neighbor_of = prevprev is_in_sensor_range = prevprev.capital_scope }
							relative_power = { who = prev category = fleet value <= equivalent }
						}
						if = {
							limit = { is_subject = yes }
							set_subject_of = { who = none }
						}
						if = {
							limit = { has_federation = yes any_federation_ally = { is_same_empire = prevprev } }
							leave_alliance = { override_requirements = yes }
						}
						establish_communications_no_message = prevprev
						establish_contact = { who = prevprev location = prevprev.capital_scope }
						prev = {
							random_war = {
								limit = { is_war_participant = { who = prev side = defenders } }
								prevprev = {
									join_war_on_side = { war = prev side = attackers }
								}
							}
						}
					}
				}
			}
		}
	}
}
